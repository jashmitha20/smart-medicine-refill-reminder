version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: medicine-refill-db
    environment:
      MYSQL_DATABASE: medicine_refill_db
      MYSQL_USER: medicine_user
      MYSQL_PASSWORD: medicine_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - medicine-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medicine-refill-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:mysql://database:3306/medicine_refill_db
      DB_USERNAME: medicine_user
      DB_PASSWORD: medicine_password
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - medicine-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/notifications/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medicine-refill-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - medicine-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: medicine-refill-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - medicine-network

volumes:
  mysql_data:
    driver: local

networks:
  medicine-network:
    driver: bridge