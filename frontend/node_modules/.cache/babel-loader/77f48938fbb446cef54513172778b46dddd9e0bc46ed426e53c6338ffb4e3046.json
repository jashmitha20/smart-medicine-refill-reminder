{"ast":null,"code":"// Simple UUID generator for local usage\nfunction uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nconst STORAGE_KEY = 'smrs.reminders';\nconst timers = {};\nfunction loadAll() {\n  try {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    return raw ? JSON.parse(raw) : [];\n  } catch {\n    return [];\n  }\n}\nfunction saveAll(reminders) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(reminders));\n}\nfunction nextTriggerMs(timeHHmm, daysOfWeek) {\n  const [hh, mm] = timeHHmm.split(':').map(Number);\n  const now = new Date();\n  const target = new Date();\n  target.setHours(hh, mm, 0, 0);\n  const allowedDays = daysOfWeek && daysOfWeek.length ? new Set(daysOfWeek) : null;\n\n  // If the time today already passed or today not allowed, find next day\n  let addDays = 0;\n  while (true) {\n    const candidate = new Date(target.getTime());\n    candidate.setDate(now.getDate() + addDays);\n    const dow = candidate.getDay();\n    const inWindow = allowedDays ? allowedDays.has(dow) : true;\n    const inFuture = candidate.getTime() > now.getTime();\n    if (inWindow && inFuture) return candidate.getTime() - now.getTime();\n    addDays += 1;\n    if (addDays > 7) {\n      // Fallback: 24h if something odd happens\n      return 24 * 60 * 60 * 1000;\n    }\n  }\n}\nasync function notify(title, body) {\n  try {\n    if (!('Notification' in window)) {\n      alert(`${title}: ${body}`);\n      return;\n    }\n    if (Notification.permission === 'granted') {\n      new Notification(title, {\n        body\n      });\n    } else if (Notification.permission !== 'denied') {\n      const perm = await Notification.requestPermission();\n      if (perm === 'granted') new Notification(title, {\n        body\n      });else alert(`${title}: ${body}`);\n    } else {\n      alert(`${title}: ${body}`);\n    }\n  } catch {\n    alert(`${title}: ${body}`);\n  }\n}\nfunction clearTimers(id) {\n  const t = timers[id];\n  if (!t) return;\n  if (t.timeoutId) window.clearTimeout(t.timeoutId);\n  if (t.intervalId) window.clearInterval(t.intervalId);\n  delete timers[id];\n}\nfunction scheduleReminder(r, medicine) {\n  clearTimers(r.id);\n  if (r.enabled === false) return;\n  const firstWait = nextTriggerMs(r.time, r.daysOfWeek);\n  const title = 'Medication Reminder';\n  const body = r.label || (medicine ? `Time to take ${medicine.medicineName}` : 'Time to take your medicine');\n  const timeoutId = window.setTimeout(() => {\n    notify(title, body);\n    // Repeat every 24 hours afterwards (respecting daysOfWeek by checking on each tick)\n    const intervalId = window.setInterval(() => {\n      const today = new Date().getDay();\n      if (!r.daysOfWeek || r.daysOfWeek.length === 0 || r.daysOfWeek.includes(today)) {\n        notify(title, body);\n      }\n    }, 24 * 60 * 60 * 1000);\n    timers[r.id] = {\n      ...timers[r.id],\n      intervalId\n    };\n  }, firstWait);\n  timers[r.id] = {\n    timeoutId\n  };\n}\nfunction rescheduleAll(medicines) {\n  const all = loadAll();\n  for (const r of all) {\n    const med = medicines === null || medicines === void 0 ? void 0 : medicines.find(m => m.id === r.medicineId);\n    scheduleReminder(r, med);\n  }\n}\nconst notificationService = {\n  init: async medicines => {\n    try {\n      if ('Notification' in window && Notification.permission === 'default') {\n        await Notification.requestPermission();\n      }\n    } catch {}\n    rescheduleAll(medicines);\n  },\n  listAll: () => loadAll(),\n  listByMedicine: medicineId => loadAll().filter(r => r.medicineId === medicineId),\n  add: input => {\n    var _input$enabled;\n    const all = loadAll();\n    const nowIso = new Date().toISOString();\n    const reminder = {\n      id: uuid(),\n      createdAt: nowIso,\n      updatedAt: nowIso,\n      enabled: (_input$enabled = input.enabled) !== null && _input$enabled !== void 0 ? _input$enabled : true,\n      label: input.label,\n      time: input.time,\n      daysOfWeek: input.daysOfWeek,\n      medicineId: input.medicineId\n    };\n    all.push(reminder);\n    saveAll(all);\n    scheduleReminder(reminder);\n    return reminder;\n  },\n  remove: id => {\n    const all = loadAll();\n    const next = all.filter(r => r.id !== id);\n    saveAll(next);\n    clearTimers(id);\n  },\n  setEnabled: (id, enabled) => {\n    const all = loadAll();\n    const r = all.find(x => x.id === id);\n    if (!r) return;\n    r.enabled = enabled;\n    r.updatedAt = new Date().toISOString();\n    saveAll(all);\n    if (enabled) scheduleReminder(r);else clearTimers(id);\n  },\n  rescheduleAll\n};\nexport default notificationService;","map":{"version":3,"names":["uuid","replace","c","r","Math","random","v","toString","STORAGE_KEY","timers","loadAll","raw","localStorage","getItem","JSON","parse","saveAll","reminders","setItem","stringify","nextTriggerMs","timeHHmm","daysOfWeek","hh","mm","split","map","Number","now","Date","target","setHours","allowedDays","length","Set","addDays","candidate","getTime","setDate","getDate","dow","getDay","inWindow","has","inFuture","notify","title","body","window","alert","Notification","permission","perm","requestPermission","clearTimers","id","t","timeoutId","clearTimeout","intervalId","clearInterval","scheduleReminder","medicine","enabled","firstWait","time","label","medicineName","setTimeout","setInterval","today","includes","rescheduleAll","medicines","all","med","find","m","medicineId","notificationService","init","listAll","listByMedicine","filter","add","input","_input$enabled","nowIso","toISOString","reminder","createdAt","updatedAt","push","remove","next","setEnabled","x"],"sources":["C:/Users/Lenovo/smart-medicine-refill-system/frontend/src/services/notificationService.ts"],"sourcesContent":["import { Reminder, ReminderInput, Medicine } from '../types/index.ts';\r\n\r\n// Simple UUID generator for local usage\r\nfunction uuid() {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n    const r = (Math.random() * 16) | 0,\r\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nconst STORAGE_KEY = 'smrs.reminders';\r\n\r\ntype Timers = { [id: string]: { timeoutId?: number; intervalId?: number } };\r\nconst timers: Timers = {};\r\n\r\nfunction loadAll(): Reminder[] {\r\n  try {\r\n    const raw = localStorage.getItem(STORAGE_KEY);\r\n    return raw ? (JSON.parse(raw) as Reminder[]) : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction saveAll(reminders: Reminder[]) {\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(reminders));\r\n}\r\n\r\nfunction nextTriggerMs(timeHHmm: string, daysOfWeek?: number[]): number {\r\n  const [hh, mm] = timeHHmm.split(':').map(Number);\r\n  const now = new Date();\r\n  const target = new Date();\r\n  target.setHours(hh, mm, 0, 0);\r\n\r\n  const allowedDays = daysOfWeek && daysOfWeek.length ? new Set(daysOfWeek) : null;\r\n\r\n  // If the time today already passed or today not allowed, find next day\r\n  let addDays = 0;\r\n  while (true) {\r\n    const candidate = new Date(target.getTime());\r\n    candidate.setDate(now.getDate() + addDays);\r\n    const dow = candidate.getDay();\r\n    const inWindow = allowedDays ? allowedDays.has(dow) : true;\r\n    const inFuture = candidate.getTime() > now.getTime();\r\n    if (inWindow && inFuture) return candidate.getTime() - now.getTime();\r\n    addDays += 1;\r\n    if (addDays > 7) {\r\n      // Fallback: 24h if something odd happens\r\n      return 24 * 60 * 60 * 1000;\r\n    }\r\n  }\r\n}\r\n\r\nasync function notify(title: string, body: string) {\r\n  try {\r\n    if (!('Notification' in window)) {\r\n      alert(`${title}: ${body}`);\r\n      return;\r\n    }\r\n    if (Notification.permission === 'granted') {\r\n      new Notification(title, { body });\r\n    } else if (Notification.permission !== 'denied') {\r\n      const perm = await Notification.requestPermission();\r\n      if (perm === 'granted') new Notification(title, { body });\r\n      else alert(`${title}: ${body}`);\r\n    } else {\r\n      alert(`${title}: ${body}`);\r\n    }\r\n  } catch {\r\n    alert(`${title}: ${body}`);\r\n  }\r\n}\r\n\r\nfunction clearTimers(id: string) {\r\n  const t = timers[id];\r\n  if (!t) return;\r\n  if (t.timeoutId) window.clearTimeout(t.timeoutId);\r\n  if (t.intervalId) window.clearInterval(t.intervalId);\r\n  delete timers[id];\r\n}\r\n\r\nfunction scheduleReminder(r: Reminder, medicine?: Medicine) {\r\n  clearTimers(r.id);\r\n  if (r.enabled === false) return;\r\n  const firstWait = nextTriggerMs(r.time, r.daysOfWeek);\r\n  const title = 'Medication Reminder';\r\n  const body = r.label || (medicine ? `Time to take ${medicine.medicineName}` : 'Time to take your medicine');\r\n\r\n  const timeoutId = window.setTimeout(() => {\r\n    notify(title, body);\r\n    // Repeat every 24 hours afterwards (respecting daysOfWeek by checking on each tick)\r\n    const intervalId = window.setInterval(() => {\r\n      const today = new Date().getDay();\r\n      if (!r.daysOfWeek || r.daysOfWeek.length === 0 || r.daysOfWeek.includes(today)) {\r\n        notify(title, body);\r\n      }\r\n    }, 24 * 60 * 60 * 1000);\r\n    timers[r.id] = { ...timers[r.id], intervalId };\r\n  }, firstWait);\r\n\r\n  timers[r.id] = { timeoutId };\r\n}\r\n\r\nfunction rescheduleAll(medicines?: Medicine[]) {\r\n  const all = loadAll();\r\n  for (const r of all) {\r\n    const med = medicines?.find(m => m.id === r.medicineId);\r\n    scheduleReminder(r, med);\r\n  }\r\n}\r\n\r\nconst notificationService = {\r\n  init: async (medicines?: Medicine[]) => {\r\n    try {\r\n      if ('Notification' in window && Notification.permission === 'default') {\r\n        await Notification.requestPermission();\r\n      }\r\n    } catch {}\r\n    rescheduleAll(medicines);\r\n  },\r\n\r\n  listAll: (): Reminder[] => loadAll(),\r\n  listByMedicine: (medicineId: number): Reminder[] => loadAll().filter(r => r.medicineId === medicineId),\r\n\r\n  add: (input: ReminderInput): Reminder => {\r\n    const all = loadAll();\r\n    const nowIso = new Date().toISOString();\r\n    const reminder: Reminder = {\r\n      id: uuid(),\r\n      createdAt: nowIso,\r\n      updatedAt: nowIso,\r\n      enabled: input.enabled ?? true,\r\n      label: input.label,\r\n      time: input.time,\r\n      daysOfWeek: input.daysOfWeek,\r\n      medicineId: input.medicineId,\r\n    };\r\n    all.push(reminder);\r\n    saveAll(all);\r\n    scheduleReminder(reminder);\r\n    return reminder;\r\n  },\r\n\r\n  remove: (id: string) => {\r\n    const all = loadAll();\r\n    const next = all.filter(r => r.id !== id);\r\n    saveAll(next);\r\n    clearTimers(id);\r\n  },\r\n\r\n  setEnabled: (id: string, enabled: boolean) => {\r\n    const all = loadAll();\r\n    const r = all.find(x => x.id === id);\r\n    if (!r) return;\r\n    r.enabled = enabled;\r\n    r.updatedAt = new Date().toISOString();\r\n    saveAll(all);\r\n    if (enabled) scheduleReminder(r); else clearTimers(id);\r\n  },\r\n\r\n  rescheduleAll,\r\n};\r\n\r\nexport default notificationService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}